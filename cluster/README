
#
#
#

1. Connect to a node in shard 1 replica set
mongo --host m1.shard1.mongocluster --port 10011

use config

2. initialize the replica set:
rs.initiate()

3. add the other 2 nodes to the replica set 
rs.add("m2.shard1.mongocluster:10012")
rs.add("m3.shard1.mongocluster:10013")

4. check status to make sure it shows all 3 nodes
May need to run rs.status() several times before the nodes stabalize and the stateStr is set to SECONDARY on the 2 additional nodes
shard1:PRIMARY> rs.status()
{
	"set" : "shard1",
	"date" : ISODate("2013-08-14T21:50:25Z"),
	"myState" : 1,
	"members" : [
		{
			"_id" : 0,
			"name" : "Harrys-AIR.local:10011",
			"health" : 1,
			"state" : 1,
			"stateStr" : "PRIMARY",
			"uptime" : 884,
			"optime" : Timestamp(1376516995, 1),
			"optimeDate" : ISODate("2013-08-14T21:49:55Z"),
			"self" : true
		},
		{
			"_id" : 1,
			"name" : "m2.shard1.mongocluster:10012",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 37,
			"optime" : Timestamp(1376516995, 1),
			"optimeDate" : ISODate("2013-08-14T21:49:55Z"),
			"lastHeartbeat" : ISODate("2013-08-14T21:50:24Z"),
			"lastHeartbeatRecv" : ISODate("2013-08-14T21:50:25Z"),
			"pingMs" : 0,
			"syncingTo" : "Harrys-AIR.local:10011"
		},
		{
			"_id" : 2,
			"name" : "m3.shard1.mongocluster:10013",
			"health" : 1,
			"state" : 2,
			"stateStr" : "SECONDARY",
			"uptime" : 30,
			"optime" : Timestamp(1376516995, 1),
			"optimeDate" : ISODate("2013-08-14T21:49:55Z"),
			"lastHeartbeat" : ISODate("2013-08-14T21:50:23Z"),
			"lastHeartbeatRecv" : ISODate("2013-08-14T21:50:24Z"),
			"pingMs" : 0,
			"syncingTo" : "Harrys-AIR.local:10011"
		}
	],
	"ok" : 1
}


mongo --host c1.shard.mongocluster --port 10201
mongos> sh.addShard("shard1/m1.shard1.mongocluster:10011")
mongos> sh.addShard("shard2/m1.shard2.mongocluster:10022")

mongos> sh.status()
--- Sharding Status --- 
  sharding version: {
	"_id" : 1,
	"version" : 3,
	"minCompatibleVersion" : 3,
	"currentVersion" : 4,
	"clusterId" : ObjectId("520bf82c62ac1bd9a6dbe186")
}
  shards:
	{  "_id" : "shard1",  "host" : "shard1/m1.shard1.mongocluster:10011,m2.shard1.mongocluster:10012,m3.shard1.mongocluster:10013" }
	{  "_id" : "shard2",  "host" : "shard2/m1.shard2.mongocluster:10021,m2.shard2.mongocluster:10022,m3.shard2.mongocluster:10023" }
  databases:
	{  "_id" : "admin",  "partitioned" : false,  "primary" : "config" }

### enable sharding on a database
mongos> sh.enableSharding("shard-test")

mongos> use shard-test
switched to db shard-test
mongos> db.documents.ensureIndex( { x: 1, y: 1 } )
mongos> sh.shardCollection("shard-test.documents", {x: 1, y: 1})
{ "collectionsharded" : "shard-test.documents", "ok" : 1 }
